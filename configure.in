AC_INIT(src/logger.cpp)

# autoconf 2.50 or higher to rebuild aclocal.m4, because the
# AC_CREATE_PREFIX_CONFIG_H macro needs the AS_DIRNAME macro.
AC_PREREQ(2.50)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

#
# +1 : ? : +1  == new interface that does not break old one
# +1 : ? : 0   == new interface that breaks old one
#  ? : ? : 0   == no new interfaces, but breaks apps
#  ? :+1 : ?   == just some internal changes, nothing breaks but might work
#                 better
# CURRENT : REVISION : AGE
LT_VERSION=9:0:0

AC_SUBST(LT_VERSION)

AH_VERBATIM([HAVE_NO_EXPLICIT_EXPORTS],
[/* no explicit exports */
#define LOG4CXX_EXPORT])

AM_INIT_AUTOMAKE(log4cxx, 0.9.8)

# Checks for programs
# ----------------------------------------------------------------------------

AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_MAKE_SET

AC_PROG_CXX([g++ c++ gpp aCC CC cxx cc++ cl FCC KCC RCC xlC_r xlC QCC])

AC_PROG_CXXCPP
AC_LANG(C++)

# CXX fine tuning
case "$host" in
    *-dec-osf*)
        CXXFLAGS="$CXXFLAGS -std strict_ansi_errors"
        ;;
    *)
        ;;
esac

# Doxygen

AC_ARG_ENABLE(doxygen,
        AC_HELP_STRING(--enable-doxygen,
                [enable documentation generation with doxygen (auto)]))

AC_ARG_ENABLE(dot,
        AC_HELP_STRING(--enable-dot,
                [use 'dot' to generate graphs in doxygen (auto)]))

AC_ARG_ENABLE(html-docs,
        AC_HELP_STRING(--enable-html-docs,
                [enable HTML generation with doxygen (yes)]),
        [],
        [enable_html_docs=yes])

AC_ARG_ENABLE(latex-docs,
        AC_HELP_STRING(--enable-latex-docs,
                [enable LaTeX documentation generation with doxygen (no)]),
        [],
        [enable_latex_docs=no])

if test "x$enable_doxygen" = xno; then
        enable_doc=no
else
        AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
        if test "x$DOXYGEN" = x; then
                        if test "x$enable_doxygen" = xyes; then
                                        AC_MSG_ERROR([could not find doxygen])
                        fi
                        enable_doc=no
        else
                        enable_doc=yes
                        AC_PATH_PROG(DOT, dot, , $PATH)
        fi
fi
AM_CONDITIONAL(DOC, test x$enable_doc = xyes)
AM_CONDITIONAL(LATEX_DOC, test x$enable_latex_docs = xyes)

if test x$DOT = x; then
        if test "x$enable_dot" = xyes; then
                AC_MSG_ERROR([could not find dot])
        fi
        enable_dot=no
else
        enable_dot=yes
fi
AC_SUBST(enable_dot)
AC_SUBST(enable_html_docs)
AC_SUBST(enable_latex_docs)

# CppUnit

AC_ARG_ENABLE(cppunit,
        AC_HELP_STRING(--enable-cppunit,
                [enable test excution with cppunit (auto)]))

enable_tests=yes

if test "x$enable_cppunit" = xno; then
        enable_tests=no
else
        AC_CHECK_PROG(CPPUNIT_CONFIG, cppunit-config, yes, no)
        if test "x$CPPUNIT_CONFIG" = "xyes"
        then
                LIBS_CPPUNIT="`cppunit-config --libs`"
                CPPFLAGS_CPPUNIT="`cppunit-config --cflags`"
                AC_SUBST(LIBS_CPPUNIT)
                AC_SUBST(CPPFLAGS_CPPUNIT)
        else
                AC_MSG_WARN(cppunit not found !)
        fi

        AC_CHECK_HEADER([cppunit/TestFixture.h],,
                enable_tests=no)
fi

AM_CONDITIONAL(TESTS, test x$enable_tests = xyes)



# Checks header files
# ----------------------------------------------------------------------------
AC_CHECK_HEADERS(unistd.h io.h alloca.h)
APR_FIND_APR( , , 1, 1)
if test "$apr_found" = "no"; then
  AC_MSG_ERROR(APR could not be located. Please use the --with-apr option.)
fi

CPPFLAGS="$CPPFLAGS `$apr_config --cppflags` `$apr_config --includes`"
APR_LIBS="`$apr_config --link-ld --libs`"
AC_SUBST(APR_LIBS)
LDFLAGS="$LDFLAGS $APR_LIBS"

APR_FIND_APU( , , 1, 1)
if test "$apu_found" = "no"; then
 AC_MSG_ERROR(APR-util could not be located. Please use the --with-apr-util option.)
fi

CPPFLAGS="$CPPFLAGS `$apu_config --includes`"
APU_LIBS="`$apu_config --link-ld --libs`"
AC_SUBST(APU_LIBS)
LDFLAGS="$LDFLAGS $APU_LIBS"

# Checks local idioms
# ----------------------------------------------------------------------------

AC_CHECK_FUNCS(swprintf)

# for SysLogAppender

AC_CHECK_FUNCS(syslog)

# Checks for libraries
# ----------------------------------------------------------------------------

AC_PROG_RANLIB

# for threads
AC_MSG_CHECKING(for thread support)
AC_ARG_WITH(thread,
        AC_HELP_STRING(--with-thread, [thread support. Accepted arguments :
                pthread, Microsoft, no (default=pthread)]),
        [ac_with_thread=$withval],
        [ac_with_thread=pthread])
case "$ac_with_thread" in
    Microsoft)
        AC_DEFINE(HAVE_MS_THREAD, 1, thread support through Microsoft threads.)
        AC_DEFINE(HAVE_THREAD, 1, thread support)
        AC_MSG_RESULT(Microsoft)
        ;;
    pthread)
        AC_MSG_RESULT(pthread)
        AC_CHECK_HEADER(pthread.h,, AC_MSG_ERROR(pthread library not found !))
        AC_DEFINE(HAVE_PTHREAD, 1, thread support through pthread library.)
        AC_DEFINE(HAVE_THREAD, 1, thread support)

        case "$host" in
                *freebsd*)
                CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE"
                LIBS="-pthread $LIBS"
                ;;
                *solaris*)
                AC_COMPILE_IFELSE(
                AC_LANG_PROGRAM(,[
                #if defined(sparc) && defined(__SUNPRO_CC)
                        char c;
                #endif
                        c = 0;]),
                        sunpro_cc=yes,
                        sunpro_cc=no)
                if test "x$sunpro_cc" = "xyes"
                then
                CPPFLAGS="$CPPFLAGS -D_REENTRANT -features=%all,no%iddollar,extensions -xarch=v8plus"
                LIBS="-lpthread -lrt -xarch=v8plus $LIBS"
                else
                CPPFLAGS="$CPPFLAGS -D_REENTRANT"
                LIBS="-lpthread -lrt $LIBS"
                fi
                ;;
                *)
                CPPFLAGS="$CPPFLAGS -D_REENTRANT"
                LIBS="-lpthread $LIBS"
                ;;
        esac

        ;;
        no)
        AC_MSG_RESULT(no)
        ;;
    *)
        AC_MSG_RESULT(???)
        AC_MSG_ERROR(Unknown option : $ac_with_thread)
        ;;
esac

# for SocketAppender
AC_CHECK_FUNCS(gethostbyname,,
        [AC_CHECK_LIB(nsl,gethostbyname,,
        [AC_CHECK_LIB(socket,gethostbyname)])])
AC_CHECK_FUNCS(setsockopt,,[AC_CHECK_LIB(socket,setsockopt)])

#for ODBCAppender
AC_MSG_CHECKING(for ODBC support)
AC_ARG_WITH(ODBC,
        AC_HELP_STRING(--with-ODBC, [ODBC support. Accepted arguments :
                unixODBC, iODBC, Microsoft, no (default=no)]),
        [ac_with_odbc=$withval],
        [ac_with_odbc=no])
case "$ac_with_odbc" in
    Microsoft)
        AC_DEFINE(HAVE_MS_ODBC, 1, ODBC support through Microsoft ODBC.)
        AC_DEFINE(HAVE_ODBC, 1, ODBC support)
        AC_MSG_RESULT(Microsoft)
        LIBS_ODBC="-lodbc32"
        ;;
    unixODBC)
        AC_MSG_RESULT(unixODBC)
        AC_CHECK_HEADER(sqlext.h,, AC_MSG_ERROR(unixODBC not found !))
        AC_DEFINE(HAVE_UNIX_ODBC, 1, ODBC support through unixODBC.)
        AC_DEFINE(HAVE_ODBC, 1, ODBC support)
        LIBS_ODBC="-lodbc"
        ;;
    iODBC)
        AC_MSG_RESULT(iODBC)
        AC_CHECK_PROG(IODBC_CONFIG, iodbc-config, yes, no)
        if test "x$IODBC_CONFIG" = "xyes"
        then
                AC_DEFINE(HAVE_I_ODBC, 1, ODBC support through iODBC.)
                AC_DEFINE(HAVE_ODBC, 1, ODBC support)
                LIBS_ODBC="`iodbc-config --libs`"
                CPPFLAGS_ODBC="`iodbc-config --cflags`"
        else
                AC_MSG_ERROR(iODBC not found !)
        fi
        ;;
        no)
        AC_MSG_RESULT(no)
        ;;
    *)
        AC_MSG_RESULT(???)
        AC_MSG_ERROR(Unknown option : $ac_with_odbc)
        ;;
esac
AC_SUBST(LIBS_ODBC)
AC_SUBST(CPPFLAGS_ODBC)

#for System
AC_CHECK_FUNCS(gettimeofday ftime setenv mbsnrtowcs wcsnrtombs)

#for SMTPAppender
AC_MSG_CHECKING(for SMTP support)
AC_ARG_WITH(SMTP,
        AC_HELP_STRING(--with-SMTP, [SMTP support. Accepted arguments :
                libsmtp, CDO, no (default=no)]),
        [ac_with_smtp=$withval],
        [ac_with_smtp=no])
case "$ac_with_smtp" in
    CDO)
        AC_MSG_RESULT(CDO)
        AC_DEFINE(HAVE_CDO_SMTP, 1, SMTP support through Microsoft CDO.)
        AC_DEFINE(HAVE_SMTP, 1, SMTP support)
        ;;
    libsmtp)
        AC_MSG_RESULT(libsmtp)
        AC_CHECK_LIB([smtp_mime], [libsmtp_session_initialize],,
                AC_MSG_ERROR(libsmtp library not found !),
                `glib-config --libs` -lsmtp)
        AC_DEFINE(HAVE_LIBSMTP, 1, SMTP support through libsmtp library.)
        AC_DEFINE(HAVE_SMTP, 1, SMTP support)
        LIBS="`glib-config --libs` -lsmtp $LIBS"
        CPPFLAGS="`glib-config --cflags` $CPPFLAGS"
        ;;
        no)
        AC_MSG_RESULT(no)
        ;;
    *)
        AC_MSG_RESULT(???)
        AC_MSG_ERROR(Unknown option : $ac_with_smtp)
        ;;
esac

#for _T

case "$host" in
        *apple-darwin*)
        AC_DEFINE(MUST_UNDEF_T, 1, Defined to 1 if macro _T has to be undefined)
        ;;
esac

CPPFLAGS="-DLOG4CXX $CPPFLAGS"

#for wchar_t
AC_MSG_CHECKING([for wchar_t])
AC_COMPILE_IFELSE(AC_LANG_SOURCE([[
           #include <string>
           std::wstring w;]]), [have_wchar_t=yes], [have_wchar_t=no])
AC_MSG_RESULT($have_wchar_t)

if test "$have_wchar_t" = "yes"
then
    AC_SUBST(HAS_WCHAR_T, 1)
else
    AC_SUBST(HAS_WCHAR_T, 0)
fi

#determine logchar type
AC_MSG_CHECKING([logchar type])
AC_ARG_WITH(logchar,
        AC_HELP_STRING(--with-logchar=TYPE, [type for logchar.
                Accepted TYPE variants: utf-8, wchar_t, cfstring (default=utf-8)]),
        [ac_with_logchar=$withval],
        [ac_with_logchar=utf-8])

case "$ac_with_logchar" in
    utf-8)
        AC_MSG_RESULT(utf-8)
        AC_SUBST(LOGCHAR_IS_UTF8, 1)
        AC_SUBST(LOGCHAR_IS_WCHAR, 0)
        AC_SUBST(LOGCHAR_IS_CFSTRING, 0)
        ;;

    wchar_t)
        AC_MSG_RESULT(wchar_t)
        AC_SUBST(LOGCHAR_IS_UTF8, 0)
        AC_SUBST(LOGCHAR_IS_WCHAR, 1)
        AC_SUBST(LOGCHAR_IS_CFSTRING, 0)
        ;;

    cfstring)
        AC_MSG_RESULT(cfstring)
        AC_SUBST(LOGCHAR_IS_UTF8, 0)
        AC_SUBST(LOGCHAR_IS_WCHAR, 0)
        AC_SUBST(LOGCHAR_IS_CFSTRING, 1)
        ;;

    *)
        AC_MSG_RESULT(???)
        AC_MSG_ERROR(Invalid logchar type: $ac_with_logchar)
        ;;
esac

# Create files
# ----------------------------------------------------------------------------

AC_CONFIG_FILES([
Makefile
docs/Makefile
docs/Doxyfile
src/Makefile
include/Makefile
include/log4cxx/log4cxx.h
include/log4cxx/private/log4cxx_private.h
include/log4cxx/private/Makefile
include/log4cxx/Makefile
include/log4cxx/helpers/Makefile
include/log4cxx/net/Makefile
include/log4cxx/nt/Makefile
include/log4cxx/spi/Makefile
include/log4cxx/spi/location/Makefile
include/log4cxx/varia/Makefile
include/log4cxx/xml/Makefile
include/log4cxx/config/Makefile
include/log4cxx/db/Makefile
include/log4cxx/rolling/Makefile
include/log4cxx/pattern/Makefile
include/log4cxx/filter/Makefile
simplesocketserver/Makefile
tests/Makefile
tests/input/Makefile
tests/input/performance/Makefile
tests/input/ndc/Makefile
tests/input/rolling/Makefile
tests/input/xml/Makefile
tests/src/Makefile
tests/witness/Makefile
tests/witness/encoding/Makefile
tests/witness/ndc/Makefile
tests/witness/rolling/Makefile
performance/Makefile
performance/xml/Makefile
examples/Makefile
])
AC_OUTPUT
