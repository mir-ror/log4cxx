<?xml version="1.0"?>
<!--
 Copyright 2004-2005 The Apache Software Foundation.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->

<!--

This file builds APR using Apache Ant (http://ant.apache.org)
and the C++ compilation tasks from http://ant-contrib.sourceforge.net.


-->
<project name="aprutil" default="check">

<property name="debug" value="true"/>
<property name="build.dir" location="build"/>
<property name="version" value="1.1.0"/>
<property name="base.dir" location="."/>
<property name="include.dir" location="${base.dir}/include"/>
<property name="apr.lib.type" value="shared"/>
<property name="apriconv.lib.type" value="static"/>
<property name="aprutil.lib.type" value="shared"/>



<taskdef resource="cpptasks.tasks"/>
<typedef resource="cpptasks.types"/>

<property name="apr.dir" location="${base.dir}/../apr-1.1.0"/>
<property name="apr.include.dir" location="${apr.dir}/include"/>
<property name="with-apr" value="${apr.dir}"/>
<property name="apriconv.dir" location="${base.dir}/../apr-iconv-1.0.1"/>
<property name="apriconv.include.dir" location="${apriconv.dir}/include"/>
<property name="with-apr-iconv" value="${apriconv.dir}"/>

<target name="usage" description="Displays usage notes">
        <echo>
        </echo>
</target>

<target name="os-detect">
        <condition property="is-unix" value="true">
             <os family="unix"/>
        </condition>
        <condition property="is-windows" value="true">
                <os family="windows"/>
        </condition>
</target>


<target name="win-init" depends="os-detect" if="is-windows">
    <property name="compiler" value="msvc"/>
    <property name="arch" value="win32"/>
</target>

<target name="unix-init" depends="os-detect" if="is-unix">
    <property name="compiler" value="gcc"/>
    <condition property="is-gcc" value="true">
        <or>
            <equals arg1="${compiler}" arg2="gcc"/>
            <equals arg1="${compiler}" arg2="g++"/>
        </or>
    </condition>
    <property name="arch" value="unix"/>
</target>

<target name="init" depends="win-init, unix-init">
        <property environment="env"/>
        <condition property="is-debug" value="true">
            <istrue value="${debug}"/>
        </condition>
        <condition property="pic-option" value="-fPIC">
                <and>
                        <isset property="is-gcc"/>
                        <istrue value="${use-pic}"/>
                </and>
        </condition>

        <condition property="aprutil.lib.dir" value="${build.dir}/debug/${aprutil.lib.type}">
            <isset property="is-debug"/>
        </condition>
        <property name="aprutil.lib.dir" location="${build.dir}/release/${aprutil.lib.type}"/>
        <mkdir dir="${aprutil.lib.dir}"/>

        <condition property="lib-suffix" value="d">
            <isset property="is-debug"/>
        </condition>
        <property name="lib-suffix" value=""/>
        <available property="src-available" file="${base.dir}"/>

        <condition property="is-apr-shared" value="true">
            <equals arg1="${apr.lib.type}" arg2="shared"/>
        </condition>
        <condition property="is-apriconv-shared" value="true">
            <equals arg1="${apriconv.lib.type}" arg2="shared"/>
        </condition>
        <condition property="is-aprutil-shared" value="true">
            <equals arg1="${aprutil.lib.type}" arg2="shared"/>
        </condition>


        <condition property="is-bcc" value="true">
            <equals arg1="${compiler}" arg2="bcc"/>
        </condition>
        <condition property="project.if" value="true">
            <istrue value="${project.if.value}"/>
        </condition>

</target>

<target name="clean" description="Deletes build products">
        <delete dir="${build.dir}"/>
</target>


<target name="configure-check" depends="init">
        <condition property="config-available" value="true">
              <and>
                    <available file="${include.dir}/apu.h"/>
                    <available file="${include.dir}/apu_want.h"/>
                    <available file="${include.dir}/private/apu_config.h"/>
                    <available file="${include.dir}/private/apu_select_dbm.h"/>
                    <available file="${base.dir}/xml/expat/lib/expat.h"/>
                    <available file="${base.dir}/xml/expat/config.h"/>
               </and>
        </condition>
</target>


<target name="win-configure" depends="configure-check" if="is-windows" unless="config-available">
    <copy tofile="${include.dir}/apu.h" file="${include.dir}/apu.hw"/>
    <copy tofile="${include.dir}/apu_want.h" file="${include.dir}/apu_want.hw"/>
    <copy tofile="${include.dir}/apr_ldap.h" file="${include.dir}/apr_ldap.hw"/>
    <replaceregexp file="${include.dir}/apr_ldap.h" match="#define APR_HAS_LDAP.*" replace="#define APR_HAS_LDAP 0"/>
    <copy tofile="${include.dir}/private/apu_config.h" file="${include.dir}/private/apu_config.hw"/>
    <copy tofile="${include.dir}/private/apu_select_dbm.h" file="${include.dir}/private/apu_select_dbm.hw"/>
    <copy tofile="${base.dir}/xml/expat/lib/expat.h" file="${base.dir}/xml/expat/lib/expat.h.in"/>
    <copy tofile="${base.dir}/xml/expat/lib/config.h" file="${base.dir}/xml/expat/lib/winconfig.h"/>
</target>

<target name="unix-configure" depends="configure-check" if="is-unix" unless="config-available">
        <exec executable="${base.dir}/configure" dir="${base.dir}">
           <arg value="--with-apr=${with-apr}"/>
           <arg value="--with-apr-iconv=${with-apr-iconv}"/>
        </exec>
        <exec executable="${base.dir}/xml/expat/configure" dir="${base.dir}/xml/expat"/>
</target>


<target name="configure" depends="unix-configure, win-configure"/>


<target name="build" depends="configure" description="Build library">
    <mkdir dir="${aprutil.lib.dir}/aprutil_obj"/>
    <!--   uses replace instead of preprocessor since
              the quotes on VERSION cause problems with cpptasks  -->
    <replace file="${base.dir}/xml/expat/lib/xmlparse.c">
       <replacefilter token="XML_MAJOR_VERSION" value="1"/>
       <replacefilter token="XML_MINOR_VERSION" value="95"/>
       <replacefilter token="XML_MICRO_VERSION" value="1"/>
       <replacefilter token="VERSION" value='"expat_1.95.1"'/>
    </replace>
    <cc name="${compiler}"
        outfile="${aprutil.lib.dir}/aprutil-1${lib-suffix}"
        subsystem="console"
        multithreaded="true"
        outtype="${aprutil.lib.type}"
        objdir="${aprutil.lib.dir}/aprutil_obj"
        warnings="none"
        debug="${debug}">
        <fileset dir="${base.dir}" includes="**/*.c"
            excludes="test/*.c ldap/*.c xml/expat/lib/*"/>
        <fileset dir="${base.dir}/xml/expat/lib"
            includes="xmlparse.c xmlrole.c xmltok.c"/>
        <fileset dir="${include.dir}" includes="*.h"/>
        <fileset dir="${include.dir}/private" includes="*.h"/>
        <fileset dir="${base.dir}/xml/expat/lib" includes="*.h"/>
        <fileset dir="${base.dir}/xml/expat" includes="*.h"/>
        <includepath path="${include.dir}"/>
        <includepath path="${include.dir}/private"/>
        <includepath path="${apr.include.dir}"/>
        <includepath path="${apriconv.include.dir}"/>
        <includepath path="${base.dir}/xml/expat/lib"/>
        <includepath path="${base.dir}/xml/expat"/>
        <defineset define="APU_DECLARE_EXPORT" if="is-aprutil-shared"/>
        <defineset define="APU_DECLARE_STATIC" unless="is-aprutil-shared"/>
        <defineset define="API_DECLARE_STATIC" if="is-apriconv-shared"/>
        <defineset define="APR_DECLARE_STATIC" if="is-apr-shared"/>
        <defineset define="WIN32" if="is-windows"/>
        <defineset define="_HAVE_CONFIG_H _REENTRANT _GNU_SOURCE" if="is-gcc"/>
        <compilerarg value="${pic-option}" if="pic-option"/>

        <libset dir="${apr.lib.dir}" libs="apr-1${lib-suffix}"/>
        <libset dir="${apriconv.lib.dir}" libs="apriconv${lib-suffix}"/>
        <libset libs="cw32mt" if="is-bcc"/>
        <libset libs="pthread dl crypt" if="is-unix"/>
        <defineset if="is-bcc">
            <define name="EILSEQ" value="50"/>
        </defineset>
    </cc>
</target>

<target name="build-test">
    <mkdir dir="${aprutil.lib.dir}/apr_obj"/>
    <cc name="${compiler}"
        outfile="${aprutil.lib.dir}/${test}"
        subsystem="console"
        multithreaded="true"
        outtype="executable"
        objdir="${aprutil.lib.dir}/apr_obj"
        debug="${debug}">
        <fileset dir="${base.dir}/test" includes="${testfiles}"/>
        <includepath path="${include.dir}"/>
        <includepath path="${apr.include.dir}"/>
        <defineset define="APU_DECLARE_STATIC" unless="is-aprutil-shared"/>
        <defineset define="API_DECLARE_STATIC" unless="is-apriconv-shared"/>
        <defineset define="APR_DECLARE_STATIC" unless="is-apr-shared"/>
        <defineset if="is-windows">
            <define name="WIN32" value="1"/>
        </defineset>
        <defineset define="_HAVE_CONFIG_H _REENTRANT _GNU_SOURCE" if="is-gcc"/>
        <compilerarg value="${pic-option}" if="pic-option"/>
        <libset dir="${apr.lib.dir}" libs="apr-1${lib-suffix}"/>
        <libset dir="${aprutil.lib.dir}" libs="aprutil-1${lib-suffix}"/>
        <libset libs="cw32mt" if="is-bcc"/>
        <libset libs="pthread dl crypt" if="is-unix"/>
    </cc>
</target>

<target name="copy-apr" if="is-windows">
    <copy todir="${aprutil.lib.dir}">
        <fileset dir="${apr.lib.dir}" includes="apr-1${lib-suffix}.dll"/>
        <fileset dir="${apriconv.lib.dir}" includes="*.dll"/>
    </copy>
</target>

<target name="run-test" depends="copy-apr">
    <exec executable="${aprutil.lib.dir}/${test}"
          dir="${aprutil.lib.dir}"
          failonerror="true">
        <env key="DYLD_LIBRARY_PATH"
           value="${apr.lib.dir}:${aprutil.lib.dir}:${apriconv.lib.dir}:${env.DYLD_LIBRARY_PATH}"/>
        <env key="LD_LIBRARY_PATH"
           value="${apr.lib.dir}:${aprutil.lib.dir}:${apriconv.lib.dir}:${env.LD_LIBRARY_PATH}"/>
        <env key="Path"
           value="${apr.lib.dir}:${aprutil.lib.dir}:${apriconv.lib.dir}:${env.Path}"/>
    </exec>
</target>


<target name="build-testdbm" depends="build">
    <antcall target="build-test">
        <param name="test" value="testdbm"/>
        <param name="testfiles" value="testdbm.c"/>
    </antcall>
</target>

<target name="run-testdbm" depends="build-testdbm">
    <antcall target="run-test">
        <param name="test" value="testdbm"/>
    </antcall>
</target>

<target name="build-testdbd" depends="build">
    <antcall target="build-test">
        <param name="test" value="testdbd"/>
        <param name="testfiles" value="testdbd.c"/>
    </antcall>
</target>

<target name="run-testdbd" depends="build-testdbd">
    <antcall target="run-test">
        <param name="test" value="testdbd"/>
    </antcall>
</target>

<target name="build-testdate" depends="build" unless="is-windows">
    <antcall target="build-test">
        <param name="test" value="testdate"/>
        <param name="testfiles" value="testdate.c"/>
    </antcall>
</target>

<target name="run-testdate" depends="build-testdate" unless="is-windows">
    <antcall target="run-test">
        <param name="test" value="testdate"/>
    </antcall>
</target>


<target name="build-testxml" depends="build">
    <antcall target="build-test">
        <param name="test" value="testxml"/>
        <param name="testfiles" value="testxml.c"/>
    </antcall>
</target>

<target name="run-testxml" depends="build-testxml">
    <antcall target="run-test">
        <param name="test" value="testxml"/>
    </antcall>
</target>

<target name="build-testrmm" depends="build">
    <antcall target="build-test">
        <param name="test" value="testrmm"/>
        <param name="testfiles" value="testrmm.c"/>
    </antcall>
</target>

<target name="run-testrmm" depends="build-testrmm">
    <antcall target="run-test">
        <param name="test" value="testrmm"/>
    </antcall>
</target>

<target name="build-testreslist" depends="build" unless="is-windows">
    <antcall target="build-test">
        <param name="test" value="testreslist"/>
        <param name="testfiles" value="testreslist.c"/>
    </antcall>
</target>

<target name="run-testreslist" depends="build-testreslist" unless="is-windows">
    <antcall target="run-test">
        <param name="test" value="testreslist"/>
    </antcall>
</target>

<target name="build-testqueue" depends="build">
    <antcall target="build-test">
        <param name="test" value="testqueue"/>
        <param name="testfiles" value="testqueue.c"/>
    </antcall>
</target>

<target name="run-testqueue" depends="build-testqueue">
    <antcall target="run-test">
        <param name="test" value="testqueue"/>
    </antcall>
</target>

<target name="build-testxlate" depends="build">
    <antcall target="build-test">
        <param name="test" value="testxlate"/>
        <param name="testfiles" value="testxlate.c"/>
    </antcall>
</target>

<target name="run-testxlate" depends="build-testxlate">
    <antcall target="run-test">
        <param name="test" value="testxlate"/>
    </antcall>
</target>


<target name="build-testall" depends="build">
    <mkdir dir="${aprutil.lib.dir}/apr_obj"/>
    <cc name="${compiler}"
        outfile="${aprutil.lib.dir}/testall"
        subsystem="console"
        multithreaded="true"
        outtype="executable"
        objdir="${aprutil.lib.dir}/apr_obj"
        debug="${debug}">
        <fileset dir="${base.dir}/test" includes="*.c">
            <exclude name="nw_misc.c"/>
            <exclude name="testdbm.c"/>
            <exclude name="testdbd.c"/>
            <exclude name="testdate.c"/>
            <exclude name="testxml.c"/>
            <exclude name="testrmm.c"/>
            <exclude name="testreslist.c"/>
            <exclude name="testqueue.c"/>
            <exclude name="testxlate.c"/>
        </fileset>
        <includepath path="${include.dir}"/>
        <includepath path="${apr.include.dir}"/>
        <defineset define="APU_DECLARE_STATIC" unless="is-aprutil-shared"/>
        <defineset define="API_DECLARE_STATIC" unless="is-apriconv-shared"/>
        <defineset define="APR_DECLARE_STATIC" unless="is-apr-shared"/>
        <defineset if="is-windows">
            <define name="WIN32" value="1"/>
        </defineset>
        <defineset define="_HAVE_CONFIG_H _REENTRANT _GNU_SOURCE" if="is-gcc"/>
        <compilerarg value="${pic-option}" if="pic-option"/>
        <libset dir="${apr.lib.dir}" libs="apr-1${lib-suffix}"/>
        <libset dir="${aprutil.lib.dir}" libs="aprutil-1${lib-suffix}"/>
        <libset libs="pthread dl crypt" if="is-unix"/>
        <libset libs="cw32mt" if="is-bcc"/>
    </cc>
</target>

<target name="run-testall" depends="build-testall">
    <antcall target="run-test">
        <param name="test" value="testall"/>
    </antcall>
</target>



<target name="build-check"
    depends="build-testdbm,
             build-testdbd,
             build-testdate,
             build-testxml,
             build-testrmm,
             build-testreslist,
             build-testqueue,
             build-testxlate,
             build-testall"
    description="Builds all tests"/>

<target name="check"
    depends="build-testdbm,
             build-testdbd,
             run-testdate,
             run-testxml,
             run-testrmm,
             run-testreslist,
             run-testqueue,
             run-testxlate,
             run-testall"
     description="Runs all tests"/>


    <target name="build-projects">
            <mkdir dir="${project.dir}"/>
            <antcall target="build">
                    <param name="project.if" value="true"/>
                    <param name="project.type" value="${project.type}"/>
                    <param name="projects.dir" value="${project.dir}"/>
                    <param name="projectsOnly" value="true"/>
            </antcall>
    </target>

    <target name="build-projects-vc6" description="Builds project files for Microsoft Visual C++ 6">
        <antcall target="build-projects">
            <param name="project.dir" value="msvc"/>
            <param name="project.type" value="msvc6"/>
        </antcall>
    </target>

    <target name="build-projects-xcode" description="Builds project files for Apple Xcode">
        <antcall target="build-projects">
            <param name="project.dir" value="xcode"/>
            <param name="project.type" value="xcode"/>
        </antcall>
    </target>

    <target name="build-projects-cbx" description="Builds project files for Borland CBuilderX">
        <antcall target="build-projects">
            <param name="project.dir" value="cbx"/>
            <param name="project.type" value="cbuilderx"/>
        </antcall>
    </target>



</project>
