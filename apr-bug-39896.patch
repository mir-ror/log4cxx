# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
Index: test/abts.c
===================================================================
--- test/abts.c	(revision 408977)
+++ test/abts.c	(working copy)
@@ -30,6 +30,66 @@
 
 const char **testlist = NULL;
 
+#if defined(_WIN32_WCE)
+/*  output to OutputDebugString in addition to specified FILE  */
+static void abts_fprintf(FILE* dest, const char* format, ...) {
+    va_list args;
+    int i;
+    int inspec;
+    enum { BUFSIZE = 256 };
+    wchar_t buf[BUFSIZE];
+    wchar_t fmt[BUFSIZE];
+    char ch;
+    inspec = 0;
+    /*  copy format transposing %c to %C and %s to %S  */
+    for(i = 0; i < BUFSIZE; i++) {
+        ch = format[i];
+        fmt[i] = ch;
+        if (ch == '%') {
+            inspec = 1;
+        } else {
+            if (inspec) {
+                inspec = 0;
+                switch(ch) {
+                    case 's':
+                    fmt[i] = L'S';
+                    break;
+
+                    case 'c':
+                    fmt[i] = L'C';
+                    break;
+
+                    case '-':
+                    case '.':
+                    case '+':
+                    inspec = 1;
+                    break;
+
+                    default:
+                    inspec = (ch >= '0' && ch <= '9');
+                    break;
+                }
+            }
+            if (ch == 0) break;
+        }
+    }
+    /* if format starts with a \b, doesn't render well in debugger */
+    if (fmt[0] != L'\b') {
+        va_start(args, format);
+        vswprintf(buf, fmt, args);
+        va_end(args);
+        OutputDebugStringW(buf);
+    }
+    /*  output to specified file too */
+    va_start(args, format);
+    vfprintf(dest, format, args);
+    va_end(args);
+}
+
+#define fprintf abts_fprintf
+#endif
+
+
 static int find_test_name(const char *testname) {
     int i;
     for (i = 0; testlist[i] != NULL; i++) {
@@ -192,7 +252,7 @@
     }
 
     if (count == 0) {
-        printf("All tests passed.\n");
+        fprintf(stdout, "All tests passed.\n");
         return 0;
     }
 
