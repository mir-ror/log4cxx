Index: ces/iso-10646-ucs-2.c
===================================================================
--- ces/iso-10646-ucs-2.c	(revision 157480)
+++ ces/iso-10646-ucs-2.c	(working copy)
@@ -50,7 +50,7 @@
 	unsigned char **outbuf, apr_size_t *outbytesleft)
 {
 	apr_size_t bytes;
-	int *state = ces->data;
+	int *state = (int*) ces->data;
 
 	if (in == UCS_CHAR_NONE)
     		return 1;	/* No state reinitialization for table charsets */
@@ -81,7 +81,7 @@
 	apr_size_t *inbytesleft)
 {
 	ucs_t res;
-	int *state = ces->data;
+	int *state = (int*) ces->data;
 	int mark;
 
 	if (*inbytesleft < 2)
Index: ces/_tbl_simple.c
===================================================================
--- ces/_tbl_simple.c	(revision 157480)
+++ ces/_tbl_simple.c	(working copy)
@@ -38,7 +38,7 @@
 static int
 table_open(struct iconv_ces *ces, apr_pool_t *ctx)
 {
-        struct iconv_module *ccsmod = ces->mod->im_private;
+        struct iconv_module *ccsmod = (struct iconv_module*) ces->mod->im_private;
         ces->data = (void *)(ccsmod->im_desc->imd_data);
 	return 0;
 }
@@ -77,7 +77,7 @@
 convert_from_ucs(struct iconv_ces *ces, ucs_t in,
 	unsigned char **outbuf, apr_size_t *outbytesleft)
 {
-	struct iconv_ccs_desc *ccsd = ces->data;
+	struct iconv_ccs_desc *ccsd = (struct iconv_ccs_desc*) ces->data;
 	ucs_t res;
 	apr_size_t bytes;
 
@@ -105,7 +105,7 @@
 convert_to_ucs(struct iconv_ces *ces, const unsigned char **inbuf,
 	apr_size_t *inbytesleft)
 {
-	struct iconv_ccs_desc *ccsd = ces->data;
+	struct iconv_ccs_desc *ccsd = (struct iconv_ccs_desc*) ces->data;
 	unsigned char byte = *(*inbuf);
 	ucs_t res = ICONV_CCS_CONVERT_TO_UCS(ccsd, byte);
 	apr_size_t bytes = (res == UCS_CHAR_INVALID && table_nbits(ces) > 8) ? 2 : 1;
@@ -132,7 +132,7 @@
 		return APR_EINVAL;
         if (mod->im_private != NULL)
             return APR_EINVAL;
-	error = apr_iconv_mod_load(mod->im_args, ICMOD_UC_CCS, NULL, &ccsmod, ctx);
+	error = apr_iconv_mod_load((const char*) mod->im_args, ICMOD_UC_CCS, NULL, &ccsmod, ctx);
 	if (error)
 		return error;
         mod->im_private = ccsmod;
@@ -142,7 +142,7 @@
 static apr_status_t
 table_unload_ccs(struct iconv_module *mod, apr_pool_t *ctx)
 {
-    struct iconv_module *ccsmod = mod->im_private;
+    struct iconv_module *ccsmod = (struct iconv_module*) mod->im_private;
     if (ccsmod == NULL)
         return APR_EINVAL;
     mod->im_private = NULL;
