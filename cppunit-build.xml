<?xml version="1.0"?>
<!--
 Copyright 2004-2005 The Apache Software Foundation.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->

<!--

This file builds Cppunit using Apache Ant (http://ant.apache.org)
and the C++ compilation tasks from http://ant-contrib.sourceforge.net.


-->
<project name="cppunit" default="check">

<property name="debug" value="true"/>
<property name="build.dir" location="build"/>
<property name="version" value="1.10.2"/>
<property name="include.dir" location="${base.dir}/include"/>
<property name="lib.type" value="static"/>
<property name="project.dir" value="${build.dir}"/>


  <taskdef resource="cpptasks.tasks"/>
<typedef resource="cpptasks.types"/>

<target name="usage">
        <echo>
        </echo>
</target>

<target name="os-detect">
        <condition property="is-unix" value="true">
             <os family="unix"/>
        </condition>
        <condition property="is-windows" value="true">
                <os family="windows"/>
        </condition>
</target>


<target name="win-init" depends="os-detect" if="is-windows">
    <property name="compiler" value="msvc"/>
</target>

<target name="unix-init" depends="os-detect" if="is-unix">
    <property name="compiler" value="gcc"/>
    <condition property="is-gcc" value="true">
        <or>
            <equals arg1="${compiler}" arg2="gcc"/>
            <equals arg1="${compiler}" arg2="g++"/>
        </or>
    </condition>
    <property name="arch" value="unix"/>
</target>

<target name="init" depends="win-init, unix-init">
        <condition property="is-debug" value="true">
            <istrue value="${debug}"/>
        </condition>
        <condition property="executable.dir" value="${build.dir}/debug">
            <isset property="is-debug"/>
        </condition>
        <property name="executable.dir" location="${build.dir}/release"/>
        <mkdir dir="${executable.dir}"/>
        <condition property="lib-suffix" value="d">
            <isset property="is-debug"/>
        </condition>
        <property name="lib-suffix" value=""/>
        <available property="src-available" file="${base.dir}"/>

        <condition property="is-shared" value="true">
            <equals arg1="${lib.type}" arg2="shared"/>
        </condition>
        <condition property="project.if" value="true">
            <istrue value="${project.if.value}"/>
        </condition>

</target>

<target name="clean">
        <delete dir="${build.dir}"/>
</target>


<target name="configure-check" depends="init">
        <condition property="config-available" value="true">
              <available file="${include.dir}/cppunit/config-auto.h"/>
        </condition>
</target>


<target name="win-configure" depends="configure-check" if="is-windows" unless="config-available">
</target>

<target name="unix-configure" depends="configure-check" if="is-unix" unless="config-available">
        <exec executable="${base.dir}/configure" dir="${base.dir}"/>
</target>


<target name="configure" depends="unix-configure, win-configure"/>


<target name="build" depends="configure" description="Build library">
    <mkdir dir="${executable.dir}/${lib.type}/cppunit_obj"/>
    <property name="project.compiler" value="${compiler}"/>
    <cc name="${project.compiler}"
        outfile="${executable.dir}/${lib.type}/cppunit${lib-suffix}"
        subsystem="console"
        multithreaded="true"
        outtype="${lib.type}"
        rtti="true"
        exceptions="true"
        objdir="${executable.dir}/${lib.type}/cppunit_obj"
        debug="${debug}"
        projectsOnly="${projectsOnly}">
        <fileset dir="${base.dir}/src/cppunit" includes="**/*.cpp" excludes="DllMain.cpp"/>
        <fileset dir="${base.dir}/include/cppunit" includes="**/*.h"/>
        <includepath path="${include.dir}"/>
        <defineset define="CPPUNIT_BUILD_DLL" if="is-shared"/>
        <defineset define="CPPUNIT_BUILD_STATIC" unless="is-shared"/>
        <defineset define="WIN32" if="is-windows"/>
        <defineset define="_HAVE_CONFIG_H _REENTRANT _GNU_SOURCE" if="is-gcc"/>
        <project type="${project.type}" outfile="${project.dir}/cppunit" if="project.if"/>
    </cc>
</target>

<target name="build-check" depends="build">
  <mkdir dir="${executable.dir}/${lib.type}/cppunittest_obj"/>
  <property name="project.compiler" value="${compiler}"/>
  <cc name="${project.compiler}"
      outfile="${executable.dir}/${lib.type}/cppunittest"
      subsystem="console"
      multithreaded="true"
      outtype="executable"
      rtti="true"
      exceptions="true"
      objdir="${executable.dir}/${lib.type}/cppunittest_obj"
      debug="${debug}"
      projectsOnly="${projectsOnly}">
    <fileset dir="${base.dir}/examples/cppunittest" includes="**/*.cpp, **/*.h"/>
    <includepath path="${include.dir}"/>
    <defineset define="CPPUNIT_DLL" if="is-shared"/>
    <defineset define="CPPUNIT_STATIC" unless="is-shared"/>
    <defineset define="WIN32" if="is-windows"/>
    <defineset define="_HAVE_CONFIG_H _REENTRANT _GNU_SOURCE" if="is-gcc"/>
    <project type="${project.type}" outfile="${project.dir}/cppunittest" if="project.if"/>
  </cc>
</target>


<target name="check" depends="build-check">
</target>



</project>
